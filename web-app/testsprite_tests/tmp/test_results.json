[
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "7c3f2611-d27c-420a-b051-7a78713465ae",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC001-Validate Jest Configuration for Module Resolution",
    "description": "Ensure Jest config correctly resolves module paths and aliases to eliminate import errors.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064947411313//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.271Z",
    "modified": "2025-08-01T16:15:47.602Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "8bdd6c93-f3da-410e-893b-6226e2286a81",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC002-Test Global Mock Injection for Authentication Services",
    "description": "Verify that global authentication mocks simulate Clerk Authentication correctly in tests.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[WARNING] useDraggable: Container for initialSnapArea has zero width or height. Cannot calculate relative center from snap area. Falling back to initialRelativeCenter or undefined. (at blob:http://localhost:3001/740e6c67-27bf-4ec7-b992-5127797de20e:3281:31)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064947465146//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.277Z",
    "modified": "2025-08-01T16:15:47.993Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "2842c39b-6e7d-49c1-a35e-d5fc017b465a",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC003-Verify Environment Variable Mocks for Supabase and WebSocket",
    "description": "Check that environment variables such as Supabase keys and WebSocket URLs are properly mocked and accessible during tests.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: environment variables not properly mocked or accessible.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064931214405//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.285Z",
    "modified": "2025-08-01T16:15:31.473Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "1798f4b0-7935-44e2-a84e-f944f9ed4351",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC004-Confirm ES Module Compatibility in Jest Testing",
    "description": "Validate that ES module syntax is supported and transformed correctly for testing using Jest configuration.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: ES module syntax support validation failed.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064953492378//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.290Z",
    "modified": "2025-08-01T16:15:53.655Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "a1be844d-393f-4f5a-b8f8-2cf7f21045c4",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC005-Check Mocking of Missing Components and Utilities",
    "description": "Verify that missing or new components/utilities are properly mocked to avoid test failures.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064943775598//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.295Z",
    "modified": "2025-08-01T16:15:44.018Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "10718741-0cc3-4360-9b8b-5ad79c0deb69",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC006-Validate Testing Library and Jest-DOM Matcher Stability",
    "description": "Ensure that Testing Library mocks and jest-dom matchers are updated and stable across UI tests.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064946071344//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.300Z",
    "modified": "2025-08-01T16:15:46.242Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "477ee5fb-12b3-4674-a368-c2f6d816a3fa",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC007-Test Performance and Timeout Fixes on Critical Suites",
    "description": "Verify that optimized test timeout settings and performance improvements allow critical suites to run within acceptable time limits.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064893019535//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.305Z",
    "modified": "2025-08-01T16:14:53.194Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "b6285a37-2b1b-47c1-afed-cb606a0b9625",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC008-Ensure Role-based Access Control Tests Use Correct Security Mocks",
    "description": "Verify security and permissions tests properly utilize mocks for role-based access and environment configurations.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064948718638//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.309Z",
    "modified": "2025-08-01T16:15:48.884Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "94e84c39-4d1b-485d-b192-fb419057cb57",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC009-Validate Real-Time WebSocket Integration Mocks",
    "description": "Ensure WebSocket real-time service mocks correctly simulate connection, message sending, and event handling.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Failed to go to the start URL. Err: Error executing action go_to_url: Page.goto: Timeout 60000ms exceeded.\nCall log:\n  - navigating to \"http://localhost:3001/\", waiting until \"load\"\n",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064887609244//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.314Z",
    "modified": "2025-08-01T16:14:47.730Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "6aaefea5-3fe5-4433-bbc4-b1c5e345f346",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC010-Check Error Handling Mechanisms in Tests",
    "description": "Test that comprehensive error handling strategies catch and report module resolution, import syntax, and dependency errors properly.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test failed due to unknown expected result; this is a generic failing assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064892261241//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.320Z",
    "modified": "2025-08-01T16:14:52.392Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "7835bf7b-6597-426a-af61-361e88b241ef",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC011-Validate Internationalization Support in Tests",
    "description": "Confirm tests correctly load and use i18next translations without errors, across supported locales.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064902031262//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.325Z",
    "modified": "2025-08-01T16:15:02.182Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "b328a36d-40b6-4fba-be92-83c65ec03205",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC012-Verify Theme Switching Functionality in Test Environment",
    "description": "Ensure theme related hooks and utilities correctly apply dark and light modes during tests.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: expected result unknown, forcing failure.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[WARNING] useDraggable: Container for initialSnapArea has zero width or height. Cannot calculate relative center from snap area. Falling back to initialRelativeCenter or undefined. (at blob:http://localhost:3001/baf3a163-52c1-4d6d-b893-2de04430ec11:3281:31)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064949147331//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.330Z",
    "modified": "2025-08-01T16:15:49.347Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "642b085b-11a3-4397-afb9-bd4a99016d6b",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC013-Test Email System Mock Integration",
    "description": "Verify that emailService and EmailProvider mocks allow testing email composition and sending without real network usage.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "Failed to go to the start URL. Err: Error executing action go_to_url: Page.goto: Timeout 60000ms exceeded.\nCall log:\n  - navigating to \"http://localhost:3001/\", waiting until \"load\"\n",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/175406488808597//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.335Z",
    "modified": "2025-08-01T16:14:48.224Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "1e58f932-12ac-4882-9afa-e7f06b37c68c",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC014-Verify Voice Assistant Mocks and UI Overlays",
    "description": "Ensure voice recognition and synthesis features utilize mocks and overlays behave correctly during tests.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064891488162//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.343Z",
    "modified": "2025-08-01T16:14:51.636Z"
  },
  {
    "projectId": "3a1a10a9-92e5-4c31-a16e-962d81dd7ca5",
    "testId": "0639e4c7-4ae9-46f9-bfa3-2e6ddbdb0e1f",
    "userId": "a48804b8-1071-70b5-7bc9-2d6873391779",
    "title": "TC015-Ensure Test Report Accuracy and Skipped Test Handling",
    "description": "Validate that test reports reflect accurate pass/fail counts and that any skipped tests are clearly marked with explanations.",
    "code": "import asyncio\nfrom playwright import async_api\n\nasync def run_test():\n    pw = None\n    browser = None\n    context = None\n    \n    try:\n        # Start a Playwright session in asynchronous mode\n        pw = await async_api.async_playwright().start()\n        \n        # Launch a Chromium browser in headless mode with custom arguments\n        browser = await pw.chromium.launch(\n            headless=True,\n            args=[\n                \"--window-size=1280,720\",         # Set the browser window size\n                \"--disable-dev-shm-usage\",        # Avoid using /dev/shm which can cause issues in containers\n                \"--ipc=host\",                     # Use host-level IPC for better stability\n                \"--single-process\"                # Run the browser in a single process mode\n            ],\n        )\n        \n        # Create a new browser context (like an incognito window)\n        context = await browser.new_context()\n        context.set_default_timeout(5000)\n        \n        # Open a new page in the browser context\n        page = await context.new_page()\n        \n        # Navigate to your target URL and wait until the network request is committed\n        await page.goto(\"http://localhost:3001\", wait_until=\"commit\", timeout=10000)\n        \n        # Wait for the main page to reach DOMContentLoaded state (optional for stability)\n        try:\n            await page.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n        except async_api.Error:\n            pass\n        \n        # Iterate through all iframes and wait for them to load as well\n        for frame in page.frames:\n            try:\n                await frame.wait_for_load_state(\"domcontentloaded\", timeout=3000)\n            except async_api.Error:\n                pass\n        \n        # Interact with the page elements to simulate user flow\n        assert False, 'Test plan execution failed: generic failure assertion.'\n        await asyncio.sleep(5)\n    \n    finally:\n        if context:\n            await context.close()\n        if browser:\n            await browser.close()\n        if pw:\n            await pw.stop()\n            \nasyncio.run(run_test())\n    ",
    "testStatus": "FAILED",
    "testError": "\nBrowser Console Logs:\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key. (at http://localhost:3001/node_modules/.vite/deps/@supabase_supabase-js.js?v=1e760f70:5142:14)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at about:srcdoc:0:0)\n[WARNING] Stagewise Toolbar is already loaded - aborting init. (at http://localhost:3001/@fs/E:/AlexVenturesStudio/Nexa_Manager_whit_Task_Master/node_modules/@stagewise/toolbar/dist/index.es.js?v=1e760f70:10715:12)\n[WARNING] ⚠️ React Router Future Flag Warning: React Router will begin wrapping state updates in `React.startTransition` in v7. You can use the `v7_startTransition` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_starttransition. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the `v7_relativeSplatPath` future flag to opt-in early. For more information, see https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath. (at http://localhost:3001/node_modules/.vite/deps/react-router-dom.js?v=1e760f70:4373:12)\n[WARNING] WebSocket connection to 'ws://localhost:8080/ws' failed: WebSocket is closed before the connection is established. (at http://localhost:3001/src/services/websocketService.js:242:0)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at commitPassiveMountOnFiber (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18206:19)\n    at commitPassiveMountEffects_complete (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18179:17)\n    at commitPassiveMountEffects_begin (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18169:15)\n    at commitPassiveMountEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18159:11)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19543:11)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22) (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[WARNING] [WARN] Could not check microphone permission: TypeError: Failed to execute 'query' on 'Permissions': Illegal invocation\n    at window.navigator.permissions.query (<anonymous>:31:21)\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:311:56\n    at http://localhost:3001/src/providers/VoiceAssistantProvider.jsx?t=1754018894162:189:5\n    at commitHookEffectListMount (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:16963:34)\n    at invokePassiveEffectMountInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:18374:19)\n    at invokeEffectsInDev (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19754:19)\n    at commitDoubleInvokeEffectsInDEV (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19739:15)\n    at flushPassiveEffectsImpl (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19556:13)\n    at flushPassiveEffects (http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19500:22)\n    at http://localhost:3001/node_modules/.vite/deps/chunk-PAOUIHN7.js?v=1e760f70:19381:17 (at http://localhost:3001/src/utils/Logger.ts:35:14)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Failed to initialize wake word detection: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] [ERROR] Wake word detection error: Error: Microphone permission denied: Requested device not found\n    at WakeWordDetectionService.requestMicrophonePermission (http://localhost:3001/src/services/wakeWordDetection.js:94:13)\n    at async WakeWordDetectionService.initialize (http://localhost:3001/src/services/wakeWordDetection.js:48:7) (at http://localhost:3001/src/utils/Logger.ts:25:14)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/services/websocketService.js:105:16)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/providers/WebSocketProvider.jsx:88:12)\n[ERROR] WebSocket error: Event (at http://localhost:3001/src/hooks/useWebSocket.js:45:12)\n[ERROR] WebSocket connection to 'ws://localhost:8080/' failed: Error in connection establishment: net::ERR_EMPTY_RESPONSE (at http://localhost:3001/src/services/websocketService.js:55:0)",
    "testType": "FRONTEND",
    "createFrom": "mcp",
    "testVisualization": "https://testsprite-videos.s3.us-east-1.amazonaws.com/a48804b8-1071-70b5-7bc9-2d6873391779/1754064939550641//tmp/test_task/result.webm",
    "created": "2025-08-01T16:12:42.350Z",
    "modified": "2025-08-01T16:15:39.668Z"
  }
]
